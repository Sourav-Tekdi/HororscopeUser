{"ast":null,"code":"const Helpers = (navigate = null) => {\n  const BASE_URL = process.env.REACT_APP_API_URL;\n\n  // Function to set an item in local storage\n  const setStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  // Function to get an item from local storage\n  const getStorage = key => {\n    const value = localStorage.getItem(key);\n    return value ? JSON.parse(value) : null;\n  };\n\n  // Function to delete an item from local storage\n  const deleteStorage = key => {\n    localStorage.removeItem(key);\n  };\n  const httpRequest = async (path, method = 'GET', data = null, headers = {}) => {\n    try {\n      const url = `${BASE_URL}${path}`; // Construct the full URL\n\n      // Get token from storage\n      const accessToken = getStorage('accessToken');\n\n      // Initialize options object\n      const options = {\n        method,\n        headers: {\n          ...headers // Spread any additional headers\n        }\n      };\n\n      // Add Authorization header if token exists\n      if (accessToken) {\n        options.headers['Authorization'] = `Bearer ${accessToken}`;\n      }\n\n      // Check if data is of type FormData\n      if (data instanceof FormData) {\n        options.body = data;\n        // If using FormData, do not set 'Content-Type' header as it will be set automatically by the browser\n      } else if (data) {\n        options.headers['Content-Type'] = 'application/json';\n        options.body = JSON.stringify(data);\n      }\n      const response = await fetch(url, options);\n      if (response.status === 401 && !response.url.includes('auth/login')) {\n        deleteStorage('accessToken');\n        deleteStorage('user');\n        deleteStorage('isAuthenticated');\n        window.location.href = '/login';\n        return false;\n      }\n\n      // You may want to handle response statuses here (like redirection to login, etc.)\n      const result = await response.json();\n      if (!response.ok) {\n        return {\n          status: 'error',\n          message: result.message || `Request failed with status ${response.status}`\n        };\n      }\n      return result;\n    } catch (error) {\n      return {\n        status: 'error',\n        message: error.message\n      };\n    }\n  };\n  const ucFirst = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  // Helper function to truncate text to a specific number of words\n  const truncateText = (text, wordLimit) => {\n    const words = text.split(\" \");\n    return words.length > wordLimit ? words.slice(0, wordLimit).join(\" \") + \"...\" : text;\n  };\n  return {\n    httpRequest,\n    setStorage,\n    getStorage,\n    deleteStorage,\n    ucFirst,\n    truncateText\n  };\n};\n_c = Helpers;\nexport default Helpers;\nvar _c;\n$RefreshReg$(_c, \"Helpers\");","map":{"version":3,"names":["Helpers","navigate","BASE_URL","process","env","REACT_APP_API_URL","setStorage","key","value","localStorage","setItem","JSON","stringify","getStorage","getItem","parse","deleteStorage","removeItem","httpRequest","path","method","data","headers","url","accessToken","options","FormData","body","response","fetch","status","includes","window","location","href","result","json","ok","message","error","ucFirst","string","charAt","toUpperCase","slice","truncateText","text","wordLimit","words","split","length","join","_c","$RefreshReg$"],"sources":["/home/ttpl-rt-239/Documents/Astrology/Hororscope/HororscopeUser/src/Helpers/Helpers.js"],"sourcesContent":["const Helpers = (navigate = null) => {\n    const BASE_URL = process.env.REACT_APP_API_URL\n\n    // Function to set an item in local storage\n    const setStorage = (key, value) => {\n        localStorage.setItem(key, JSON.stringify(value))\n    }\n\n    // Function to get an item from local storage\n    const getStorage = (key) => {\n        const value = localStorage.getItem(key)\n        return value ? JSON.parse(value) : null\n    }\n\n    // Function to delete an item from local storage\n    const deleteStorage = (key) => {\n        localStorage.removeItem(key)\n    }\n\n    const httpRequest = async (path, method = 'GET', data = null, headers = {}) => {\n        try {\n            const url = `${BASE_URL}${path}` // Construct the full URL\n\n            // Get token from storage\n            const accessToken = getStorage('accessToken')\n\n            // Initialize options object\n            const options = {\n                method,\n                headers: {\n                    ...headers, // Spread any additional headers\n                },\n            }\n\n            // Add Authorization header if token exists\n            if (accessToken) {\n                options.headers['Authorization'] = `Bearer ${accessToken}`\n            }\n\n            // Check if data is of type FormData\n            if (data instanceof FormData) {\n                options.body = data\n                // If using FormData, do not set 'Content-Type' header as it will be set automatically by the browser\n            } else if (data) {\n                options.headers['Content-Type'] = 'application/json'\n                options.body = JSON.stringify(data)\n            }\n\n            const response = await fetch(url, options)\n\n            if (response.status === 401 && !response.url.includes('auth/login')) {\n                deleteStorage('accessToken');\n                deleteStorage('user');\n                deleteStorage('isAuthenticated');\n                window.location.href = '/login';\n                return false\n            }\n            \n\n            // You may want to handle response statuses here (like redirection to login, etc.)\n            const result = await response.json()\n            if (!response.ok) {\n                return {\n                    status: 'error',\n                    message: result.message || `Request failed with status ${response.status}`,\n                }\n            }\n\n            return result\n        } catch (error) {\n            return {\n                status: 'error',\n                message: error.message,\n            }\n        }\n    }\n\n\n    const ucFirst = (string) => {\n        return string.charAt(0).toUpperCase() + string.slice(1)\n    }\n\n    // Helper function to truncate text to a specific number of words\n    const truncateText = (text, wordLimit) => {\n        const words = text.split(\" \");\n        return words.length > wordLimit\n            ? words.slice(0, wordLimit).join(\" \") + \"...\"\n            : text;\n    };\n\n\n    return {\n        httpRequest,\n        setStorage,\n        getStorage,\n        deleteStorage,\n        ucFirst,\n        truncateText\n    }\n}\n\nexport default Helpers\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}