{"ast":null,"code":"var _jsxFileName = \"/home/ttpl-rt-239/Documents/Astrology/Hororscope/HororscopeUser/src/admin/context/NetworkProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkContext = /*#__PURE__*/createContext();\nexport const NetworkProvider = ({\n  children\n}) => {\n  _s();\n  const [isInternet, setIsInternet] = useState(navigator.onLine);\n  useEffect(() => {\n    // Event handlers to update internet connectivity status\n    const handleOnline = () => setIsInternet(true);\n    const handleOffline = () => setIsInternet(false);\n\n    // Add event listeners\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Cleanup event listeners on component unmount\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(NetworkContext.Provider, {\n    value: {\n      isInternet\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(NetworkProvider, \"K4BU2jtSRYJ9fZ+7Dx/NTCrxUjc=\");\n_c = NetworkProvider;\nexport const useNetwork = () => {\n  _s2();\n  return useContext(NetworkContext);\n};\n_s2(useNetwork, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"NetworkProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","NetworkContext","NetworkProvider","children","_s","isInternet","setIsInternet","navigator","onLine","handleOnline","handleOffline","window","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNetwork","_s2","$RefreshReg$"],"sources":["/home/ttpl-rt-239/Documents/Astrology/Hororscope/HororscopeUser/src/admin/context/NetworkProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react'\n\nconst NetworkContext = createContext()\n\nexport const NetworkProvider = ({ children }) => {\n    const [isInternet, setIsInternet] = useState(navigator.onLine)\n\n    useEffect(() => {\n        // Event handlers to update internet connectivity status\n        const handleOnline = () => setIsInternet(true)\n        const handleOffline = () => setIsInternet(false)\n\n        // Add event listeners\n        window.addEventListener('online', handleOnline)\n        window.addEventListener('offline', handleOffline)\n\n        // Cleanup event listeners on component unmount\n        return () => {\n            window.removeEventListener('online', handleOnline)\n            window.removeEventListener('offline', handleOffline)\n        }\n    }, [])\n\n    return (\n        <NetworkContext.Provider value={{ isInternet }}>\n            {children}\n        </NetworkContext.Provider>\n    )\n}\n\nexport const useNetwork = () => useContext(NetworkContext)\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAACU,SAAS,CAACC,MAAM,CAAC;EAE9DV,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,YAAY,GAAGA,CAAA,KAAMH,aAAa,CAAC,IAAI,CAAC;IAC9C,MAAMI,aAAa,GAAGA,CAAA,KAAMJ,aAAa,CAAC,KAAK,CAAC;;IAEhD;IACAK,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAC/CE,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;;IAEjD;IACA,OAAO,MAAM;MACTC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;MAClDE,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEH,aAAa,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAACC,cAAc,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV;IAAW,CAAE;IAAAF,QAAA,EAC1CA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAAAf,EAAA,CAxBYF,eAAe;AAAAkB,EAAA,GAAflB,eAAe;AA0B5B,OAAO,MAAMmB,UAAU,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1B,UAAU,CAACK,cAAc,CAAC;AAAA;AAAAqB,GAAA,CAA7CD,UAAU;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}